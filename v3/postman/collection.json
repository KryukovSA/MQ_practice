{
	"info": {
		"_postman_id": "9a2dd82a-078d-4c32-bff5-48c6f2b00a5c",
		"name": "[rsoi][lab2] Car Rental System",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Gateway API",
			"item": [
				{
					"name": "Получить список всех доступных для бронирования автомобилей",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Получить список всех доступных для бронирования автомобилей\", () => {",
									"    pm.response.to.have.status(200)",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.contains(\"application/json\");",
									"",
									"    const pageSize = Number(pm.request.url.query.get(\"size\"))",
									"    const carUid = pm.collectionVariables.get(\"carUid\")",
									"",
									"    const response = pm.response.json();",
									"    pm.expect(response.items).to.be.an(\"array\")",
									"    pm.expect(response.page).to.be.not.undefined",
									"    pm.expect(response.pageSize).to.be.lte(pageSize)",
									"    pm.expect(response.totalElements).to.be.not.undefined",
									"",
									"    const car = _.find(response.items, { \"carUid\": carUid })",
									"    pm.expect(car).to.be.not.undefined",
									"    pm.expect(car.carUid).to.eq(carUid)",
									"    pm.expect(car.brand).to.eq(\"Mercedes Benz\")",
									"    pm.expect(car.model).to.eq(\"GLA 250\")",
									"    pm.expect(car.registrationNumber).to.be.eq(\"ЛО777Х799\")",
									"    pm.expect(car.type).to.be.eq(\"SEDAN\")",
									"    pm.expect(car.price).to.be.eq(3500)",
									"    pm.expect(car.available).to.be.true",
									"",
									"    pm.collectionVariables.set(\"rentalPrice\", car.price)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/cars?page=1&size=10&showAll=false",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"cars"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "size",
									"value": "10"
								},
								{
									"key": "showAll",
									"value": "false"
								}
							]
						}
					},
					"response": [
						{
							"name": "Список доступных для бронирования автомобилей",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/cars?page=1&size=10&showAll=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"cars"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "size",
											"value": "10"
										},
										{
											"key": "showAll",
											"value": "true"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"page\": 1,\n    \"pageSize\": 1,\n    \"totalElements\": 1,\n    \"items\": [\n        {\n            \"carUid\": \"109b42f3-198d-4c89-9276-a7520a7120ab\",\n            \"brand\": \"Mercedes Benz\",\n            \"model\": \"GLA 250\",\n            \"registrationNumber\": \"ЛО777Х799\",\n            \"power\": 249,\n            \"type\": \"SEDAN\",\n            \"price\": 3500,\n            \"available\": true\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Забронировать автомобиль",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const moment = require(\"moment\")",
									"",
									"pm.test(\"Забронировать автомобиль\", () => {",
									"    pm.response.to.have.status(200)",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.contains(\"application/json\");",
									"",
									"    const carUid = pm.collectionVariables.get(\"carUid\")",
									"    const rentalPrice = pm.collectionVariables.get(\"rentalPrice\")",
									"",
									"    const response = pm.response.json();",
									"    const request = JSON.parse(pm.request.body.raw)",
									"",
									"    pm.expect(response.rentalUid).to.be.not.undefined",
									"    pm.expect(response.carUid).to.be.eq(carUid)",
									"    pm.expect(response.status).to.be.eq(\"IN_PROGRESS\")",
									"    pm.expect(response.dateFrom).to.be.eq(request.dateFrom)",
									"    pm.expect(response.dateTo).to.be.eq(request.dateTo)",
									"    pm.expect(response.payment).to.be.not.undefined",
									"    pm.expect(response.payment.paymentUid).to.be.not.undefined",
									"    pm.expect(response.payment.status).to.be.eq(\"PAID\")",
									"    const dateFrom = moment(request.dateFrom)",
									"    const dateTo = moment(request.dateTo)",
									"    const days = Math.abs(dateFrom.diff(dateTo, \"days\"))",
									"    pm.expect(response.payment.price).to.be.eq(days * rentalPrice)",
									"",
									"    pm.collectionVariables.set(\"dateFrom\", request.dateFrom)",
									"    pm.collectionVariables.set(\"dateTo\", request.dateTo)",
									"    pm.collectionVariables.set(\"rentalUid\", response.rentalUid)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "Имя пользователя",
								"key": "X-User-Name",
								"value": "{{username}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"carUid\": \"{{carUid}}\",\n    \"dateFrom\": \"2021-10-08\",\n    \"dateTo\": \"2021-10-11\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/rental",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"rental"
							]
						}
					},
					"response": [
						{
							"name": "Информация о бронировании авто",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Имя пользователя",
										"key": "X-User-Name",
										"value": "{{username}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"carUid\": \"{{carUid}}\",\n    \"dateFrom\": \"2021-10-08\",\n    \"dateTo\": \"2021-10-11\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/rental",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"rental"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"rentalUid\": \"4fd4fc0c-7840-483c-bcf5-3e2be7d4ea69\",\n    \"status\": \"IN_PROGRESS\",\n    \"carUid\": \"109b42f3-198d-4c89-9276-a7520a7120ab\",\n    \"dateFrom\": \"2021-10-08\",\n    \"dateTo\": \"2021-10-11\",\n    \"payment\": {\n        \"paymentUid\": \"238c733c-fb1e-40a9-aadb-73cb8f90675d\",\n        \"status\": \"PAID\",\n        \"price\": 10500\n    }\n}"
						}
					]
				},
				{
					"name": "Информация по конкретной аренде пользователя",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const moment = require(\"moment\")",
									"",
									"pm.test(\"Получение информации по конкретной аренде пользователя\", () => {",
									"    pm.response.to.have.status(200)",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.contains(\"application/json\");",
									"",
									"    const carUid = pm.collectionVariables.get(\"carUid\")",
									"    const rentalUid = pm.collectionVariables.get(\"rentalUid\")",
									"    const dateFrom = pm.collectionVariables.get(\"dateFrom\")",
									"    const dateTo = pm.collectionVariables.get(\"dateTo\")",
									"    const rentalPrice = pm.collectionVariables.get(\"rentalPrice\")",
									"",
									"    const response = pm.response.json();",
									"    pm.expect(response.rentalUid).to.be.eq(rentalUid)",
									"    pm.expect(response.status).to.be.eq(\"IN_PROGRESS\")",
									"    pm.expect(response.dateFrom).to.be.eq(dateFrom)",
									"    pm.expect(response.dateTo).to.be.eq(dateTo)",
									"",
									"    pm.expect(response.car).to.be.not.undefined",
									"    pm.expect(response.car.carUid).to.be.eq(carUid)",
									"    pm.expect(response.car.brand).to.be.eq(\"Mercedes Benz\")",
									"    pm.expect(response.car.model).to.be.eq(\"GLA 250\")",
									"    pm.expect(response.car.registrationNumber).to.be.eq(\"ЛО777Х799\")",
									"",
									"    pm.expect(response.payment).to.be.not.undefined",
									"    pm.expect(response.payment.paymentUid).to.be.not.undefined",
									"    pm.expect(response.payment.status).to.be.eq(\"PAID\")",
									"    const days = Math.abs(moment(dateFrom).diff(moment(dateTo), \"days\"))",
									"    pm.expect(response.payment.price).to.be.eq(days * rentalPrice)",
									"",
									"    pm.collectionVariables.set(\"rentalUid\", response.rentalUid)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "Имя пользователя",
								"key": "X-User-Name",
								"value": "{{username}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/rental/:rentalUid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"rental",
								":rentalUid"
							],
							"variable": [
								{
									"key": "rentalUid",
									"value": "{{rentalUid}}",
									"description": "UUID аренды"
								}
							]
						}
					},
					"response": [
						{
							"name": "Информация по конкретному бронированию",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Имя пользователя",
										"key": "X-User-Name",
										"value": "{{username}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/rental/:rentalUid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"rental",
										":rentalUid"
									],
									"variable": [
										{
											"key": "rentalUid",
											"value": "{{rentalUid}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"rentalUid\": \"4fd4fc0c-7840-483c-bcf5-3e2be7d4ea69\",\n    \"status\": \"IN_PROGRESS\",\n    \"dateFrom\": \"2021-10-08\",\n    \"dateTo\": \"2021-10-11\",\n    \"car\": {\n        \"carUid\": \"109b42f3-198d-4c89-9276-a7520a7120ab\",\n        \"brand\": \"Mercedes Benz\",\n        \"model\": \"GLA 250\",\n        \"registrationNumber\": \"ЛО777Х799\"\n    },\n    \"payment\": {\n        \"paymentUid\": \"238c733c-fb1e-40a9-aadb-73cb8f90675d\",\n        \"status\": \"PAID\",\n        \"price\": 10500\n    }\n}"
						}
					]
				},
				{
					"name": "Получить информацию о всех арендах пользователя",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const moment = require(\"moment\")",
									"",
									"pm.test(\"Получение информации по конкретной аренде пользователя\", () => {",
									"    pm.response.to.have.status(200)",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.contains(\"application/json\");",
									"",
									"    const carUid = pm.collectionVariables.get(\"carUid\")",
									"    const rentalUid = pm.collectionVariables.get(\"rentalUid\")",
									"    const dateFrom = pm.collectionVariables.get(\"dateFrom\")",
									"    const dateTo = pm.collectionVariables.get(\"dateTo\")",
									"    const rentalPrice = pm.collectionVariables.get(\"rentalPrice\")",
									"",
									"    const response = pm.response.json();",
									"    const rental = _.find(response, { \"rentalUid\": rentalUid })",
									"    pm.expect(rental).to.be.not.undefined",
									"    pm.expect(rental.rentalUid).to.be.eq(rentalUid)",
									"    pm.expect(rental.status).to.be.eq(\"IN_PROGRESS\")",
									"    pm.expect(rental.dateFrom).to.be.eq(dateFrom)",
									"    pm.expect(rental.dateTo).to.be.eq(dateTo)",
									"",
									"    pm.expect(rental.car).to.be.not.undefined",
									"    pm.expect(rental.car.carUid).to.be.eq(carUid)",
									"    pm.expect(rental.car.brand).to.be.eq(\"Mercedes Benz\")",
									"    pm.expect(rental.car.model).to.be.eq(\"GLA 250\")",
									"    pm.expect(rental.car.registrationNumber).to.be.eq(\"ЛО777Х799\")",
									"",
									"    pm.expect(rental.payment).to.be.not.undefined",
									"    pm.expect(rental.payment.paymentUid).to.be.not.undefined",
									"    pm.expect(rental.payment.status).to.be.eq(\"PAID\")",
									"    const days = Math.abs(moment(dateFrom).diff(moment(dateTo), \"days\"))",
									"    pm.expect(rental.payment.price).to.be.eq(days * rentalPrice)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "Имя пользователя",
								"key": "X-User-Name",
								"value": "{{username}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/rental",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"rental"
							]
						}
					},
					"response": [
						{
							"name": "Информация обо всех арендах",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Имя пользователя",
										"key": "X-User-Name",
										"value": "{{username}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/rental",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"rental"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"rentalUid\": \"4fd4fc0c-7840-483c-bcf5-3e2be7d4ea69\",\n        \"status\": \"IN_PROGRESS\",\n        \"dateFrom\": \"2021-10-08\",\n        \"dateTo\": \"2021-10-11\",\n        \"car\": {\n            \"carUid\": \"109b42f3-198d-4c89-9276-a7520a7120ab\",\n            \"brand\": \"Mercedes Benz\",\n            \"model\": \"GLA 250\",\n            \"registrationNumber\": \"ЛО777Х799\"\n        },\n        \"payment\": {\n            \"paymentUid\": \"238c733c-fb1e-40a9-aadb-73cb8f90675d\",\n            \"status\": \"PAID\",\n            \"price\": 10500\n        }\n    }\n]"
						}
					]
				},
				{
					"name": "Отмена аренды автомобиля",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Аренда отменена\", () => {",
									"    pm.response.to.have.status(204)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"description": "Имя пользователя",
								"key": "X-User-Name",
								"value": "{{username}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/rental/:rentalUid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"rental",
								":rentalUid"
							],
							"variable": [
								{
									"key": "rentalUid",
									"value": "{{rentalUid}}",
									"description": "UUID аренды"
								}
							]
						}
					},
					"response": [
						{
							"name": "Аренда успешно отменена",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Имя пользователя",
										"key": "X-User-Name",
										"value": "{{username}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/rental/:rentalUid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"rental",
										":rentalUid"
									],
									"variable": [
										{
											"key": "rentalUid",
											"value": "{{rentalUid}}"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Информация по конкретной аренде пользователя",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const moment = require(\"moment\")",
									"",
									"pm.test(\"Получение информации по конкретной аренде пользователя\", () => {",
									"    pm.response.to.have.status(200)",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.contains(\"application/json\");",
									"",
									"    const carUid = pm.collectionVariables.get(\"carUid\")",
									"    const rentalUid = pm.collectionVariables.get(\"rentalUid\")",
									"    const dateFrom = pm.collectionVariables.get(\"dateFrom\")",
									"    const dateTo = pm.collectionVariables.get(\"dateTo\")",
									"    const rentalPrice = pm.collectionVariables.get(\"rentalPrice\")",
									"",
									"    const response = pm.response.json();",
									"    pm.expect(response.rentalUid).to.be.eq(rentalUid)",
									"    pm.expect(response.status).to.be.eq(\"CANCELED\")",
									"    pm.expect(response.dateFrom).to.be.eq(dateFrom)",
									"    pm.expect(response.dateTo).to.be.eq(dateTo)",
									"",
									"    pm.expect(response.car).to.be.not.undefined",
									"    pm.expect(response.car.carUid).to.be.eq(carUid)",
									"    pm.expect(response.car.brand).to.be.eq(\"Mercedes Benz\")",
									"    pm.expect(response.car.model).to.be.eq(\"GLA 250\")",
									"    pm.expect(response.car.registrationNumber).to.be.eq(\"ЛО777Х799\")",
									"",
									"    pm.expect(response.payment).to.be.not.undefined",
									"    pm.expect(response.payment.paymentUid).to.be.not.undefined",
									"    pm.expect(response.payment.status).to.be.eq(\"CANCELED\")",
									"    const days = Math.abs(moment(dateFrom).diff(moment(dateTo), \"days\"))",
									"    pm.expect(response.payment.price).to.be.eq(days * rentalPrice)",
									"",
									"    pm.collectionVariables.set(\"rentalUid\", response.rentalUid)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "Имя пользователя",
								"key": "X-User-Name",
								"value": "{{username}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/rental/:rentalUid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"rental",
								":rentalUid"
							],
							"variable": [
								{
									"key": "rentalUid",
									"value": "{{rentalUid}}",
									"description": "UUID аренды"
								}
							]
						}
					},
					"response": [
						{
							"name": "Информация по конкретному бронированию",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Имя пользователя",
										"key": "X-User-Name",
										"value": "{{username}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/rental/:rentalUid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"rental",
										":rentalUid"
									],
									"variable": [
										{
											"key": "rentalUid",
											"value": "{{rentalUid}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"rentalUid\": \"4fd4fc0c-7840-483c-bcf5-3e2be7d4ea69\",\n    \"status\": \"IN_PROGRESS\",\n    \"dateFrom\": \"2021-10-08\",\n    \"dateTo\": \"2021-10-11\",\n    \"car\": {\n        \"carUid\": \"109b42f3-198d-4c89-9276-a7520a7120ab\",\n        \"brand\": \"Mercedes Benz\",\n        \"model\": \"GLA 250\",\n        \"registrationNumber\": \"ЛО777Х799\"\n    },\n    \"payment\": {\n        \"paymentUid\": \"238c733c-fb1e-40a9-aadb-73cb8f90675d\",\n        \"status\": \"PAID\",\n        \"price\": 10500\n    }\n}"
						}
					]
				},
				{
					"name": "Забронировать автомобиль",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const moment = require(\"moment\")",
									"",
									"pm.test(\"Забронировать автомобиль\", () => {",
									"    pm.response.to.have.status(200)",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.contains(\"application/json\");",
									"",
									"    const carUid = pm.collectionVariables.get(\"carUid\")",
									"    const rentalPrice = pm.collectionVariables.get(\"rentalPrice\")",
									"",
									"    const response = pm.response.json();",
									"    const request = JSON.parse(pm.request.body.raw)",
									"",
									"    pm.expect(response.rentalUid).to.be.not.undefined",
									"    pm.expect(response.carUid).to.be.eq(carUid)",
									"    pm.expect(response.status).to.be.eq(\"IN_PROGRESS\")",
									"    pm.expect(response.dateFrom).to.be.eq(request.dateFrom)",
									"    pm.expect(response.dateTo).to.be.eq(request.dateTo)",
									"    pm.expect(response.payment).to.be.not.undefined",
									"    pm.expect(response.payment.paymentUid).to.be.not.undefined",
									"    pm.expect(response.payment.status).to.be.eq(\"PAID\")",
									"    const dateFrom = moment(request.dateFrom)",
									"    const dateTo = moment(request.dateTo)",
									"    const days = Math.abs(dateFrom.diff(dateTo, \"days\"))",
									"    pm.expect(response.payment.price).to.be.eq(days * rentalPrice)",
									"",
									"    pm.collectionVariables.set(\"dateFrom\", request.dateFrom)",
									"    pm.collectionVariables.set(\"dateTo\", request.dateTo)",
									"    pm.collectionVariables.set(\"rentalUid\", response.rentalUid)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "Имя пользователя",
								"key": "X-User-Name",
								"value": "{{username}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"carUid\": \"{{carUid}}\",\n    \"dateFrom\": \"2021-10-08\",\n    \"dateTo\": \"2021-10-11\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/rental",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"rental"
							]
						}
					},
					"response": [
						{
							"name": "Информация о бронировании авто",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Имя пользователя",
										"key": "X-User-Name",
										"value": "{{username}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"carUid\": \"{{carUid}}\",\n    \"dateFrom\": \"2021-10-08\",\n    \"dateTo\": \"2021-10-11\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/rental",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"rental"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"rentalUid\": \"4fd4fc0c-7840-483c-bcf5-3e2be7d4ea69\",\n    \"status\": \"IN_PROGRESS\",\n    \"carUid\": \"109b42f3-198d-4c89-9276-a7520a7120ab\",\n    \"dateFrom\": \"2021-10-08\",\n    \"dateTo\": \"2021-10-11\",\n    \"payment\": {\n        \"paymentUid\": \"238c733c-fb1e-40a9-aadb-73cb8f90675d\",\n        \"status\": \"PAID\",\n        \"price\": 10500\n    }\n}"
						}
					]
				},
				{
					"name": "Завершение аренды автомобиля",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Аренда отменена\", () => {",
									"    pm.response.to.have.status(204)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "Имя пользователя",
								"key": "X-User-Name",
								"value": "{{username}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/rental/:rentalUid/finish",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"rental",
								":rentalUid",
								"finish"
							],
							"variable": [
								{
									"key": "rentalUid",
									"value": "{{rentalUid}}",
									"description": "UUID аренды"
								}
							]
						}
					},
					"response": [
						{
							"name": "Аренда успешно завершена",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Имя пользователя",
										"key": "X-User-Name",
										"value": "{{username}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/rental/:rentalUid/finish",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"rental",
										":rentalUid",
										"finish"
									],
									"variable": [
										{
											"key": "rentalUid",
											"value": "{{rentalUid}}"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Информация по конкретной аренде пользователя",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const moment = require(\"moment\")",
									"",
									"pm.test(\"Получение информации по конкретной аренде пользователя\", () => {",
									"    pm.response.to.have.status(200)",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.contains(\"application/json\");",
									"",
									"    const carUid = pm.collectionVariables.get(\"carUid\")",
									"    const rentalUid = pm.collectionVariables.get(\"rentalUid\")",
									"    const dateFrom = pm.collectionVariables.get(\"dateFrom\")",
									"    const dateTo = pm.collectionVariables.get(\"dateTo\")",
									"    const rentalPrice = pm.collectionVariables.get(\"rentalPrice\")",
									"",
									"    const response = pm.response.json();",
									"    pm.expect(response.rentalUid).to.be.eq(rentalUid)",
									"    pm.expect(response.status).to.be.eq(\"FINISHED\")",
									"    pm.expect(response.dateFrom).to.be.eq(dateFrom)",
									"    pm.expect(response.dateTo).to.be.eq(dateTo)",
									"",
									"    pm.expect(response.car).to.be.not.undefined",
									"    pm.expect(response.car.carUid).to.be.eq(carUid)",
									"    pm.expect(response.car.brand).to.be.eq(\"Mercedes Benz\")",
									"    pm.expect(response.car.model).to.be.eq(\"GLA 250\")",
									"    pm.expect(response.car.registrationNumber).to.be.eq(\"ЛО777Х799\")",
									"",
									"    pm.expect(response.payment).to.be.not.undefined",
									"    pm.expect(response.payment.paymentUid).to.be.not.undefined",
									"    pm.expect(response.payment.status).to.be.eq(\"PAID\")",
									"    const days = Math.abs(moment(dateFrom).diff(moment(dateTo), \"days\"))",
									"    pm.expect(response.payment.price).to.be.eq(days * rentalPrice)",
									"",
									"    pm.collectionVariables.set(\"rentalUid\", response.rentalUid)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "Имя пользователя",
								"key": "X-User-Name",
								"value": "{{username}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/rental/:rentalUid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"rental",
								":rentalUid"
							],
							"variable": [
								{
									"key": "rentalUid",
									"value": "{{rentalUid}}",
									"description": "UUID аренды"
								}
							]
						}
					},
					"response": [
						{
							"name": "Информация по конкретному бронированию",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Имя пользователя",
										"key": "X-User-Name",
										"value": "{{username}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/rental/:rentalUid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"rental",
										":rentalUid"
									],
									"variable": [
										{
											"key": "rentalUid",
											"value": "{{rentalUid}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"rentalUid\": \"4fd4fc0c-7840-483c-bcf5-3e2be7d4ea69\",\n    \"status\": \"IN_PROGRESS\",\n    \"dateFrom\": \"2021-10-08\",\n    \"dateTo\": \"2021-10-11\",\n    \"car\": {\n        \"carUid\": \"109b42f3-198d-4c89-9276-a7520a7120ab\",\n        \"brand\": \"Mercedes Benz\",\n        \"model\": \"GLA 250\",\n        \"registrationNumber\": \"ЛО777Х799\"\n    },\n    \"payment\": {\n        \"paymentUid\": \"238c733c-fb1e-40a9-aadb-73cb8f90675d\",\n        \"status\": \"PAID\",\n        \"price\": 10500\n    }\n}"
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.collectionVariables.set(\"carUid\", \"109b42f3-198d-4c89-9276-a7520a7120ab\")",
							"pm.collectionVariables.set(\"username\", \"Test Max\")"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080"
		},
		{
			"key": "carUid",
			"value": ""
		},
		{
			"key": "username",
			"value": ""
		},
		{
			"key": "rentalUid",
			"value": ""
		},
		{
			"key": "rentalPrice",
			"value": ""
		},
		{
			"key": "dateFrom",
			"value": ""
		},
		{
			"key": "dateTo",
			"value": ""
		}
	]
}

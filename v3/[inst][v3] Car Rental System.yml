openapi: 3.0.1
info:
  title: Car Rental System
  version: "1.0"
servers:
  - url: http://localhost:8080
paths:
  /api/v1/cars:
    get:
      summary: Получить список всех доступных для бронирования автомобилей
      tags:
        - Gateway API
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: number
            minimum: 0
        - name: size
          in: query
          required: false
          schema:
            type: number
            minimum: 1
            maximum: 100
        - name: showAll
          in: query
          required: false
          schema:
            type: boolean
      responses:
        "200":
          description: Список доступных для бронирования автомобилей
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginationResponse"

  /api/v1/rental:
    get:
      summary: Получить информацию о всех арендах пользователя
      tags:
        - Gateway API
      parameters:
        - name: X-User-Name
          in: header
          description: Имя пользователя
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Информация обо всех арендах
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RentalResponse"

    post:
      summary: Забронировать автомобиль
      tags:
        - Gateway API
      parameters:
        - name: X-User-Name
          in: header
          description: Имя пользователя
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateRentalRequest"
      responses:
        "200":
          description: Информация о бронировании авто
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateRentalResponse"
        "400":
          description: Ошибка валидации данных
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationErrorResponse"

  /api/v1/rental/{rentalUid}:
    get:
      summary: Информация по конкретной аренде пользователя
      tags:
        - Gateway API
      parameters:
        - name: rentalUid
          in: path
          description: UUID аренды
          required: true
          schema:
            type: string
            format: uuid
        - name: X-User-Name
          in: header
          description: Имя пользователя
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Информация по конкретному бронированию
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RentalResponse"
        "404":
          description: Билет не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

    delete:
      summary: Отмена аренды автомобиля
      tags:
        - Gateway API
      parameters:
        - name: rentalUid
          in: path
          description: UUID аренды
          required: true
          schema:
            type: string
            format: uuid
        - name: X-User-Name
          in: header
          description: Имя пользователя
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Аренда успешно отменена
        "404":
          description: Аренда не найдена
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/v1/rental/{rentalUid}/finish:
    post:
      summary: Завершение аренды автомобиля
      tags:
        - Gateway API
      parameters:
        - name: rentalUid
          in: path
          description: UUID аренды
          required: true
          schema:
            type: string
            format: uuid
        - name: X-User-Name
          in: header
          description: Имя пользователя
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Аренда успешно завершена
        "404":
          description: Аренда не найдена
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

components:
  schemas:
    PaginationResponse:
      type: object
      example:
        {
          "page": 1,
          "pageSize": 1,
          "totalElements": 1,
          "items": [
            {
              "carUid": "109b42f3-198d-4c89-9276-a7520a7120ab",
              "brand": "Mercedes Benz",
              "model": "GLA 250",
              "registrationNumber": "ЛО777Х799",
              "power": 249,
              "type": "SEDAN",
              "price": 3500,
              "available": true
            }
          ]
        }
      properties:
        page:
          type: number
          description: Номер страницы
        pageSize:
          type: number
          description: Количество элементов на странице
        totalElements:
          type: number
          description: Общее количество элементов
        items:
          type: array
          items:
            $ref: "#/components/schemas/CarResponse"

    CarResponse:
      type: object
      example:
        {
          "carUid": "109b42f3-198d-4c89-9276-a7520a7120ab",
          "brand": "Mercedes Benz",
          "model": "GLA 250",
          "registrationNumber": "ЛО777Х799",
          "power": 249,
          "type": "SEDAN",
          "price": 3500,
          "available": true
        }
      properties:
        carUid:
          type: string
          format: uuid
          description: UUID автомобиля
        brand:
          type: string
          description: Марка автомобиля
        model:
          type: string
          description: Модель автомобиля
        registrationNumber:
          type: string
          description: Регистрационный номер автомобиля
        power:
          type: number
          description: Мощность автомобиля в лошадиных силах
        type:
          type: string
          description: Тип автомобиля
          enum:
            - SEDAN
            - SUV
            - MINIVAN
            - ROADSTER
        price:
          type: number
          description: Цена автомобиля за сутки
        available:
          type: boolean
          description: Флаг, указывающий что автомобиль доступен для бронирования

    RentalResponse:
      type: object
      example:
        {
          "rentalUid": "4fd4fc0c-7840-483c-bcf5-3e2be7d4ea69",
          "status": "IN_PROGRESS",
          "dateFrom": "2021-10-08",
          "dateTo": "2021-10-11",
          "car": {
            "carUid": "109b42f3-198d-4c89-9276-a7520a7120ab",
            "brand": "Mercedes Benz",
            "model": "GLA 250",
            "registrationNumber": "ЛО777Х799"
          },
          "payment": {
            "paymentUid": "238c733c-fb1e-40a9-aadb-73cb8f90675d",
            "status": "PAID",
            "price": 10500
          }
        }
      properties:
        rentalUid:
          type: string
          description: UUID аренды
          format: uuid
        status:
          type: string
          description: Статус аренды
          enum:
            - NEW
            - IN_PROGRESS
            - FINISHED
            - CANCELED
        dateFrom:
          type: string
          description: Дата начала аренды
          format: ISO 8601
        dateTo:
          type: string
          description: Дата окончания аренды
          format: ISO 8601
        car:
          $ref: "#/components/schemas/CarInfo"
        payment:
          $ref: "#/components/schemas/PaymentInfo"

    CreateRentalRequest:
      type: object
      example:
        {
          "carUid": "109b42f3-198d-4c89-9276-a7520a7120ab",
          "dateFrom": "2021-10-08",
          "dateTo": "2021-10-11"
        }
      properties:
        carUid:
          type: string
          format: uuid
          description: UUID автомобиля
        dateFrom:
          type: string
          description: Дата начала аренды
          format: ISO 8601
        dateTo:
          type: string
          description: Дата окончания аренды
          format: ISO 8601

    CreateRentalResponse:
      type: object
      example:
        {
          "rentalUid": "4fd4fc0c-7840-483c-bcf5-3e2be7d4ea69",
          "status": "IN_PROGRESS",
          "carUid": "109b42f3-198d-4c89-9276-a7520a7120ab",
          "dateFrom": "2021-10-08",
          "dateTo": "2021-10-11",
          "payment": {
            "paymentUid": "238c733c-fb1e-40a9-aadb-73cb8f90675d",
            "status": "PAID",
            "price": 1
          }
        }
      properties:
        rentalUid:
          type: string
          description: UUID аренды
          format: uuid
        status:
          type: string
          description: Статус аренды
          enum:
            - IN_PROGRESS
            - FINISHED
            - CANCELED
        carUid:
          type: string
          format: uuid
          description: UUID автомобиля
        dateFrom:
          type: string
          description: Дата начала аренды
          format: ISO 8601
        dateTo:
          type: string
          description: Дата окончания аренды
          format: ISO 8601
        payment:
          $ref: "#/components/schemas/PaymentInfo"

    CarInfo:
      type: object
      example:
        {
          "carUid": "109b42f3-198d-4c89-9276-a7520a7120ab",
          "brand": "Mercedes Benz",
          "model": "GLA 250",
          "registrationNumber": "ЛО777Х799"
        }
      properties:
        carUid:
          type: string
          format: uuid
          description: UUID автомобиля
        brand:
          type: string
          description: Марка автомобиля
        model:
          type: string
          description: Модель автомобиля
        registrationNumber:
          type: string
          description: Регистрационный номер автомобиля

    PaymentInfo:
      type: object
      example:
        {
          "paymentUid": "238c733c-fb1e-40a9-aadb-73cb8f90675d",
          "status": "PAID",
          "price": 10500
        }
      properties:
        paymentUid:
          type: string
          format: uuid
          description: UUID платежа
        status:
          type: string
          description: Статус платежа
          enum:
            - PAID
            - REVERSED
        price:
          type: number
          description: Сумма платежа

    ErrorDescription:
      type: object
      properties:
        field:
          type: string
        error:
          type: string

    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          description: Информация об ошибке

    ValidationErrorResponse:
      type: object
      properties:
        message:
          type: string
          description: Информация об ошибке
        errors:
          type: array
          description: Массив полей с описанием ошибки
          items:
            $ref: "#/components/schemas/ErrorDescription"

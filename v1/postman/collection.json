{
	"info": {
		"_postman_id": "6a65c85e-f601-4a7e-9d78-ef46b38321f1",
		"name": "[rsoi][lab2] Flight Service",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Gateway API",
			"item": [
				{
					"name": "Получить список рейсов",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Получить список рейсов\", () => {",
									"    pm.response.to.have.status(200)",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.contains(\"application/json\");",
									"",
									"    const flightNumber = pm.collectionVariables.get(\"flightNumber\")",
									"    const response = pm.response.json();",
									"",
									"    const pageSize = Number(pm.request.url.query.get(\"size\"))",
									"    pm.expect(response.items).to.be.an(\"array\")",
									"    pm.expect(response.page).to.be.not.undefined",
									"    pm.expect(response.pageSize).to.be.lte(pageSize)",
									"    pm.expect(response.totalElements).to.be.not.undefined",
									"",
									"    const flight = _.find(response.items, { \"flightNumber\": flightNumber })",
									"    pm.expect(flight).to.be.not.undefined",
									"    pm.expect(flight.flightNumber).to.eq(flightNumber)",
									"    pm.expect(flight.fromAirport).to.eq(\"Санкт-Петербург Пулково\")",
									"    pm.expect(flight.toAirport).to.eq(\"Москва Шереметьево\")",
									"    pm.expect(flight.date).to.not.empty",
									"    pm.expect(flight.price).to.eq(1500)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/flights?page=1&size=10",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"flights"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "size",
									"value": "10"
								}
							]
						}
					},
					"response": [
						{
							"name": "Список рейсов",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/flights?page=0&size=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"flights"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "10"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"page\": 1,\n    \"pageSize\": 1,\n    \"totalElements\": 1,\n    \"items\": [\n        {\n            \"flightNumber\": \"AFL031\",\n            \"fromAirport\": \"Санкт-Петербург Пулково\",\n            \"toAirport\": \"Москва Шереметьево\",\n            \"date\": \"2021-10-08 20:00\",\n            \"price\": 1500\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Получить информацию о состоянии бонусного счета",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Получить информацию о состоянии бонусного счета\", () => {",
									"    pm.response.to.have.status(200)",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.contains(\"application/json\");",
									"",
									"    const response = pm.response.json();",
									"",
									"    pm.expect(response.balance).to.be.not.undefined",
									"    pm.expect(response.status).to.be.not.undefined",
									"    pm.collectionVariables.set(\"balance\", response.balance)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "Имя пользователя",
								"key": "X-User-Name",
								"value": "{{username}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/privilege",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"privilege"
							]
						}
					},
					"response": [
						{
							"name": "Данные о бонусном счете",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Имя пользователя",
										"key": "X-User-Name",
										"value": "{{username}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/privilege",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"privilege"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"balance\": 1500,\n  \"status\": \"GOLD\",\n  \"history\": [\n    {\n      \"date\": \"2021-10-08T19:59:19Z\",\n      \"ticketUid\": \"049161bb-badd-4fa8-9d90-87c9a82b0668\",\n      \"balanceDiff\": 1500,\n      \"operationType\": \"FILL_IN_BALANCE\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Покупка билета",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Купить билет\", () => {",
									"    pm.response.to.have.status(200)",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.contains(\"application/json\");",
									"",
									"    const flightNumber = pm.collectionVariables.get(\"flightNumber\")",
									"    const response = pm.response.json();",
									"",
									"    pm.expect(response).to.be.not.undefined",
									"    pm.expect(response.ticketUid).to.be.not.empty",
									"    pm.expect(response.flightNumber).to.eq(flightNumber)",
									"    pm.expect(response.fromAirport).to.eq(\"Санкт-Петербург Пулково\")",
									"    pm.expect(response.toAirport).to.eq(\"Москва Шереметьево\")",
									"    pm.expect(response.date).to.not.empty",
									"    pm.expect(response.price).to.eq(1500)",
									"    pm.expect(response.paidByMoney).to.eq(1500)",
									"    pm.expect(response.paidByBonuses).to.eq(0)",
									"    pm.expect(response.status).to.eq(\"PAID\")",
									"    pm.expect(response.privilege.balance).to.gte(150)",
									"    pm.expect(response.privilege.status).to.be.not.empty",
									"    ",
									"    pm.collectionVariables.set(\"ticketUid\", response.ticketUid)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"description": "Имя пользователя",
								"key": "X-User-Name",
								"value": "{{username}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"flightNumber\": \"{{flightNumber}}\",\n    \"price\": 1500,\n    \"paidFromBalance\": false\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets"
							]
						}
					},
					"response": [
						{
							"name": "Информация о купленном билете",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Имя пользователя",
										"key": "X-User-Name",
										"value": "{{username}}"
									},
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"flightNumber\": \"AFL031\",\n    \"price\": 1500,\n    \"paidFromBalance\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/tickets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"tickets"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"ticketUid\": \"049161bb-badd-4fa8-9d90-87c9a82b0668\",\n    \"flightNumber\": \"AFL031\",\n    \"fromAirport\": \"Санкт-Петербург Пулково\",\n    \"toAirport\": \"Москва Шереметьево\",\n    \"date\": \"2021-10-08 20:00\",\n    \"price\": 1500,\n    \"paidByMoney\": 1500,\n    \"paidByBonuses\": 0,\n    \"status\": \"PAID\",\n    \"privilege\": {\n        \"balance\": 1500,\n        \"status\": \"GOLD\"\n    }\n}"
						}
					]
				},
				{
					"name": "Информация по конкретному билету",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Информация по конкретному билету\", () => {",
									"    pm.response.to.have.status(200)",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.contains(\"application/json\");",
									"",
									"    const flightNumber = pm.collectionVariables.get(\"flightNumber\")",
									"    const ticketUid = pm.collectionVariables.get(\"ticketUid\")",
									"    ",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.be.not.undefined",
									"    pm.expect(response.ticketUid).to.be.eq(ticketUid)",
									"    pm.expect(response.flightNumber).to.eq(flightNumber)",
									"    pm.expect(response.fromAirport).to.eq(\"Санкт-Петербург Пулково\")",
									"    pm.expect(response.toAirport).to.eq(\"Москва Шереметьево\")",
									"    pm.expect(response.date).to.not.empty",
									"    pm.expect(response.price).to.eq(1500)",
									"    pm.expect(response.status).to.eq(\"PAID\")",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "Имя пользователя",
								"key": "X-User-Name",
								"value": "{{username}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticketUid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticketUid"
							],
							"variable": [
								{
									"key": "ticketUid",
									"value": "{{ticketUid}}",
									"description": "UUID билета"
								}
							]
						}
					},
					"response": [
						{
							"name": "Информация по конкретному билету",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Имя пользователя",
										"key": "X-User-Name",
										"value": "{{username}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/tickets/:ticketUid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										":ticketUid"
									],
									"variable": [
										{
											"key": "ticketUid",
											"value": "{{ticketUid}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"ticketUid\": \"049161bb-badd-4fa8-9d90-87c9a82b0668\",\n \"flightNumber\": \"AFL031\",\n \"fromAirport\": \"Санкт-Петербург Пулково\",\n \"toAirport\": \"Москва Шереметьево\",\n \"date\": \"2021-10-08 20:00\",\n \"price\": 1500,\n \"status\": \"PAID\"\n}"
						}
					]
				},
				{
					"name": "Информация по всем билетам пользователя",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Информация по всем билетам\", () => {",
									"    pm.response.to.have.status(200)",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.contains(\"application/json\");",
									"",
									"    const flightNumber = pm.collectionVariables.get(\"flightNumber\")",
									"    const ticketUid = pm.collectionVariables.get(\"ticketUid\")",
									"    ",
									"    const response = pm.response.json();",
									"    pm.expect(response).to.be.an(\"array\")",
									"",
									"    const ticket = _.find(response, { \"ticketUid\": ticketUid })",
									"    pm.expect(ticket).to.be.not.undefined",
									"    pm.expect(ticket.ticketUid).to.be.eq(ticketUid)",
									"    pm.expect(ticket.flightNumber).to.eq(flightNumber)",
									"    pm.expect(ticket.fromAirport).to.eq(\"Санкт-Петербург Пулково\")",
									"    pm.expect(ticket.toAirport).to.eq(\"Москва Шереметьево\")",
									"    pm.expect(ticket.date).to.not.empty",
									"    pm.expect(ticket.price).to.eq(1500)",
									"    pm.expect(ticket.status).to.eq(\"PAID\")",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "Имя пользователя",
								"key": "X-User-Name",
								"value": "{{username}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets"
							]
						}
					},
					"response": [
						{
							"name": "Информация по всем билетам",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Имя пользователя",
										"key": "X-User-Name",
										"value": "{{username}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/tickets",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"tickets"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"ticketUid\": \"049161bb-badd-4fa8-9d90-87c9a82b0668\",\n  \"flightNumber\": \"AFL031\",\n  \"fromAirport\": \"Санкт-Петербург Пулково\",\n  \"toAirport\": \"Москва Шереметьево\",\n  \"date\": \"2021-10-08 20:00\",\n  \"price\": 1500,\n  \"status\": \"PAID\"\n },\n {\n  \"ticketUid\": \"049161bb-badd-4fa8-9d90-87c9a82b0668\",\n  \"flightNumber\": \"AFL031\",\n  \"fromAirport\": \"Санкт-Петербург Пулково\",\n  \"toAirport\": \"Москва Шереметьево\",\n  \"date\": \"2021-10-08 20:00\",\n  \"price\": 1500,\n  \"status\": \"PAID\"\n }\n]"
						}
					]
				},
				{
					"name": "Информация о пользователе",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Информация о пользователе\", () => {",
									"    pm.response.to.have.status(200)",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.contains(\"application/json\");",
									"",
									"    const flightNumber = pm.collectionVariables.get(\"flightNumber\")",
									"    const ticketUid = pm.collectionVariables.get(\"ticketUid\")",
									"    const balance = pm.collectionVariables.get(\"balance\")",
									"",
									"    const response = pm.response.json();",
									"    const ticket = _.find(response.tickets, { \"ticketUid\": ticketUid })",
									"",
									"    pm.expect(ticket).to.be.not.undefined",
									"    pm.expect(ticket.ticketUid).to.be.eq(ticketUid)",
									"    pm.expect(ticket.flightNumber).to.be.eq(flightNumber)",
									"    pm.expect(ticket.fromAirport).to.eq(\"Санкт-Петербург Пулково\")",
									"    pm.expect(ticket.toAirport).to.eq(\"Москва Шереметьево\")",
									"    pm.expect(ticket.date).to.not.empty",
									"    pm.expect(ticket.price).to.be.eq(1500)",
									"    pm.expect(ticket.status).to.be.eq(\"PAID\")",
									"    ",
									"    pm.expect(response.privilege).to.be.not.undefined",
									"    pm.expect(response.privilege.balance).to.be.eq(balance + 150)",
									"    pm.expect(response.privilege.status).to.be.not.empty",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "Имя пользователя",
								"key": "X-User-Name",
								"value": "{{username}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"me"
							]
						}
					},
					"response": [
						{
							"name": "Полная информация о пользователе",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Имя пользователя",
										"key": "X-User-Name",
										"value": "{{username}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/me",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"me"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"tickets\": [\n  {\n   \"ticketUid\": \"049161bb-badd-4fa8-9d90-87c9a82b0668\",\n   \"flightNumber\": \"AFL031\",\n   \"fromAirport\": \"Санкт-Петербург Пулково\",\n   \"toAirport\": \"Москва Шереметьево\",\n   \"date\": \"2021-10-08 20:00\",\n   \"price\": 1500,\n   \"status\": \"PAID\"\n  }\n ],\n \"privilege\": {\n  \"balance\": \"1500\",\n  \"status\": \"SILVER\"\n }\n}"
						}
					]
				},
				{
					"name": "Получить информацию о состоянии бонусного счета после покупки билета",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Информация о состоянии бонусного счета\", () => {",
									"    pm.response.to.have.status(200)",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.contains(\"application/json\");",
									"",
									"    const ticketUid = pm.collectionVariables.get(\"ticketUid\")",
									"    const balance = pm.collectionVariables.get(\"balance\")",
									"",
									"    const response = pm.response.json();",
									"    const ticket = _.find(response.history, { \"ticketUid\": ticketUid })",
									"    pm.expect(ticket).to.be.not.undefined",
									"",
									"    pm.expect(response.balance).to.be.eq(balance + 150)",
									"    pm.expect(response.status).to.be.not.undefined",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"description": "Имя пользователя",
								"key": "X-User-Name",
								"value": "{{username}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/privilege",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"privilege"
							]
						}
					},
					"response": [
						{
							"name": "Данные о бонусном счете",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Имя пользователя",
										"key": "X-User-Name",
										"value": "{{username}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/privilege",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"privilege"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"balance\": 1500,\n  \"status\": \"GOLD\",\n  \"history\": [\n    {\n      \"date\": \"2021-10-08T19:59:19Z\",\n      \"ticketUid\": \"049161bb-badd-4fa8-9d90-87c9a82b0668\",\n      \"balanceDiff\": 1500,\n      \"operationType\": \"FILL_IN_BALANCE\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Возврат билета",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Билет успешно возвращен\", () => {",
									"    pm.response.to.have.status(204)",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"description": "Имя пользователя",
								"key": "X-User-Name",
								"value": "{{username}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/v1/tickets/:ticketUid",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"tickets",
								":ticketUid"
							],
							"variable": [
								{
									"key": "ticketUid",
									"value": "{{ticketUid}}",
									"description": "UUID билета"
								}
							]
						}
					},
					"response": [
						{
							"name": "Возврат билета успешно выполнен",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Имя пользователя",
										"key": "X-User-Name",
										"value": "{{username}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/api/v1/tickets/:ticketUid",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"tickets",
										":ticketUid"
									],
									"variable": [
										{
											"key": "ticketUid"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.collectionVariables.set(\"flightNumber\", \"AFL031\")",
							"pm.collectionVariables.set(\"username\", \"Test Max\")"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080"
		},
		{
			"key": "flightNumber",
			"value": ""
		},
		{
			"key": "ticketUid",
			"value": ""
		},
		{
			"key": "username",
			"value": ""
		},
		{
			"key": "balance",
			"value": ""
		}
	]
}

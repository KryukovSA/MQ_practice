openapi: 3.0.1
info:
  title: Hotels Booking System
  version: "1.0"
servers:
  - url: http://localhost:8080
paths:
  /api/v1/hotels:
    get:
      summary: Получить список отелей
      tags:
        - Gateway API
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: number
            minimum: 0
        - name: size
          in: query
          required: false
          schema:
            type: number
            minimum: 1
            maximum: 100
      responses:
        "200":
          description: Список отелей
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginationResponse"

  /api/v1/me:
    get:
      summary: Информация о пользователе
      tags:
        - Gateway API
      parameters:
        - name: X-User-Name
          in: header
          description: Имя пользователя
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Полная информация о пользователе
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserInfoResponse"

  /api/v1/reservations:
    get:
      summary: Информация по всем бронированиям пользователя
      tags:
        - Gateway API
      parameters:
        - name: X-User-Name
          in: header
          description: Имя пользователя
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Информация по всем билетам
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ReservationResponse"

    post:
      summary: Забронировать отель
      tags:
        - Gateway API
      parameters:
        - name: X-User-Name
          in: header
          description: Имя пользователя
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateReservationRequest"
      responses:
        "200":
          description: Информация о бронировании
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateReservationResponse"
        "400":
          description: Ошибка валидации данных
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationErrorResponse"

  /api/v1/reservations/{reservationUid}:
    get:
      summary: Информация по конкретному бронированию
      tags:
        - Gateway API
      parameters:
        - name: reservationUid
          in: path
          description: UUID бронирования
          required: true
          schema:
            type: string
            format: uuid
        - name: X-User-Name
          in: header
          description: Имя пользователя
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Информация по конкретному бронированию
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReservationResponse"
        "404":
          description: Билет не найден
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

    delete:
      summary: Отменить бронирование
      tags:
        - Gateway API
      parameters:
        - name: reservationUid
          in: path
          description: UUID бронирования
          required: true
          schema:
            type: string
            format: uuid
        - name: X-User-Name
          in: header
          description: Имя пользователя
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Бронь успешно отменена
        "404":
          description: Бронь не найдена
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"

  /api/v1/loyalty:
    get:
      summary: Получить информацию о статусе в программе лояльности
      tags:
        - Gateway API
      parameters:
        - name: X-User-Name
          in: header
          description: Имя пользователя
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Данные о бонусном счете
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoyaltyInfoResponse"

components:
  schemas:
    PaginationResponse:
      type: object
      example:
        {
          "page": 1,
          "pageSize": 1,
          "totalElements": 1,
          "items": [
            {
              "hotelUid": "049161bb-badd-4fa8-9d90-87c9a82b0668",
              "name": "Ararat Park Hyatt Moscow",
              "country": "Россия",
              "city": "Москва",
              "address": "Неглинная ул., 4",
              "stars": 5,
              "price": 10000
            }
          ]
        }
      properties:
        page:
          type: number
          description: Номер страницы
        pageSize:
          type: number
          description: Количество элементов на странице
        totalElements:
          type: number
          description: Общее количество элементов
        items:
          type: array
          items:
            $ref: "#/components/schemas/HotelResponse"

    HotelResponse:
      type: object
      example:
        {
          "hotelUid": "049161bb-badd-4fa8-9d90-87c9a82b0668",
          "name": "Ararat Park Hyatt Moscow",
          "country": "Россия",
          "city": "Москва",
          "address": "Неглинная ул., 4",
          "stars": 5,
          "price": 10000
        }
      properties:
        hotelUid:
          type: string
          format: uuid
          description: UUID отеля
        name:
          type: string
          description: Название отеля
        country:
          type: string
          description: Страна
        city:
          type: string
          description: Город, где располагается отель
        address:
          type: string
          description: Адрес отеля
        stars:
          type: number
          description: Количество звезд отеля
        price:
          type: number
          description: Цена номера за сутки

    HotelInfo:
      type: object
      example:
        {
          "hotelUid": "049161bb-badd-4fa8-9d90-87c9a82b0668",
          "name": "Ararat Park Hyatt Moscow",
          "fullAddress": "Россия, Москва, Неглинная ул., 4",
          "stars": 5
        }
      properties:
        hotelUid:
          type: string
          format: uuid
          description: UUID отеля
        name:
          type: string
          description: Название отеля
        fullAddress:
          type: string
          description: Полный адрес отеля
        stars:
          type: number
          description: Количество звезд отеля

    UserInfoResponse:
      type: object
      example:
        {
          "reservations": [
            {
              "reservationUid": "9b4ba1f7-e5ac-465b-ace4-7b54dec20f9a",
              "hotel": {
                "hotelUid": "049161bb-badd-4fa8-9d90-87c9a82b0668",
                "name": "Ararat Park Hyatt Moscow",
                "fullAddress": "Россия, Москва, Неглинная ул., 4",
                "stars": 5
              },
              "startDate": "2021-10-08",
              "endDate": "2021-10-11",
              "status": "PAID",
              "payment": {
                "status": "PAID",
                "price": 27000
              }
            }
          ],
          "loyalty": {
            "status": "GOLD",
            "discount": 10
          }
        }
      properties:
        reservations:
          type: array
          items:
            $ref: "#/components/schemas/ReservationResponse"
        loyalty:
          $ref: "#/components/schemas/LoyaltyInfoResponse"

    ReservationResponse:
      type: object
      example:
        {
          "reservationUid": "9b4ba1f7-e5ac-465b-ace4-7b54dec20f9a",
          "hotel": {
            "hotelUid": "049161bb-badd-4fa8-9d90-87c9a82b0668",
            "name": "Ararat Park Hyatt Moscow",
            "fullAddress": "Россия, Москва, Неглинная ул., 4",
            "stars": 5
          },
          "startDate": "2021-10-08",
          "endDate": "2021-10-11",
          "status": "PAID",
          "payment": {
            "status": "PAID",
            "price": 27000
          }
        }
      properties:
        reservationUid:
          type: string
          format: uuid
          description: UUID бронирования
        hotel:
          $ref: "#/components/schemas/HotelInfo"
        startDate:
          type: string
          description: Дата начала брони
          format: ISO 8601
        endDate:
          type: string
          description: Дата начала брони
          format: ISO 8601
        status:
          type: string
          description: Статус бронирования
          enum:
            - PAID
            - RESERVED
            - CANCELED
        payment:
          $ref: "#/components/schemas/PaymentInfo"

    CreateReservationRequest:
      type: object
      example:
        {
          "hotelUid": "049161bb-badd-4fa8-9d90-87c9a82b0668",
          "startDate": "2021-10-08",
          "endDate": "2021-10-11"
        }
      properties:
        hotelUid:
          type: string
          format: uuid
          description: UUID отеля
        startDate:
          type: string
          description: Дата начала брони
          format: ISO 8601
        endDate:
          type: string
          description: Дата начала брони
          format: ISO 8601

    CreateReservationResponse:
      type: object
      example:
        {
          "reservationUid": "9b4ba1f7-e5ac-465b-ace4-7b54dec20f9a",
          "hotelUid": "049161bb-badd-4fa8-9d90-87c9a82b0668",
          "startDate": "2021-10-08",
          "endDate": "2021-10-11",
          "discount": 10,
          "status": "PAID",
          "payment": {
            "status": "PAID",
            "price": 27000
          }
        }
      properties:
        reservationUid:
          type: string
          format: uuid
          description: UUID бронирования
        hotelUid:
          type: string
          format: uuid
          description: UUID отеля
        startDate:
          type: string
          description: Дата начала брони
          format: ISO 8601
        endDate:
          type: string
          description: Дата начала брони
          format: ISO 8601
        discount:
          type: string
          description: Скидка за участие в бонусной программе
        status:
          type: string
          description: Статус бронирования
          enum:
            - PAID
            - RESERVED
            - CANCELED
        payment:
          $ref: "#/components/schemas/PaymentInfo"

    PaymentInfo:
      type: object
      example:
        {
          "status": "PAID",
          "price": 27000
        }
      properties:
        status:
          type: string
          description: Статус операции оплаты
          enum:
            - PAID
            - REVERSED
            - CANCELED
        price:
          type: number
          description: Сумма операции

    LoyaltyInfoResponse:
      type: object
      example:
        {
          "status": "GOLD",
          "discount": 10,
          "reservationCount": 25
        }
      properties:
        status:
          type: string
          description: Статус в программе лояльности
          enum:
            - BRONZE
            - SILVER
            - GOLD
        discount:
          type: number
          description: Скидка по программе лояльности
        reservationCount:
          type: number
          description: Количество бронирований

    ErrorDescription:
      type: object
      properties:
        field:
          type: string
        error:
          type: string

    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          description: Информация об ошибке

    ValidationErrorResponse:
      type: object
      properties:
        message:
          type: string
          description: Информация об ошибке
        errors:
          type: array
          description: Массив полей с описанием ошибки
          items:
            $ref: "#/components/schemas/ErrorDescription"
